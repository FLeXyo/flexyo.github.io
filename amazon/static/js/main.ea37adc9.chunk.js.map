{"version":3,"sources":["components/Gallery.tsx","services/amazon-gallery-service.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Gallery","keyword","useState","galleries","setGalleries","theme","useTheme","smol","useMediaQuery","breakpoints","down","useEffect","limit","axios","get","then","response","products","nodes","DOMParser","parseFromString","data","querySelectorAll","i","length","node","classList","contains","asin","getAttribute","name","querySelector","textContent","push","images","searchProductsBeta","forEach","product","params","URLSearchParams","append","Date","now","toString","post","getGallery","gallery","g","className","filter","map","Accordion","key","AccordionSummary","Typography","AccordionDetails","GridList","cols","cellHeight","image","GridListTile","href","largeImage","rel","target","src","mediumImage","alt","App","darkTheme","unstable_createMuiStrictModeTheme","palette","type","setKeyword","ThemeProvider","CssBaseline","AppBar","position","Toolbar","variant","TextField","style","marginLeft","spacing","placeholder","onKeyDown","e","value","blur","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea37adc9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  GridList,\n  GridListTile,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { Product } from '../models/amazon-gallery-response';\nimport { getGallery, searchProductsBeta } from '../services/amazon-gallery-service';\n\ninterface Props {\n  keyword: string,\n}\n\nfunction Gallery({ keyword }: Props) {\n  const [galleries, setGalleries] = useState<Product[]>([]);\n  const theme = useTheme();\n  const smol = useMediaQuery(theme.breakpoints.down('sm'));\n  useEffect(() => {\n    if (keyword !== '') {\n      searchProductsBeta(keyword, 10)\n        .then((products) => products\n          .forEach((product) => getGallery(product.asin)\n            .then((gallery) => setGalleries((g) => [...g,\n              {\n                images: gallery.data.images,\n                asin: product.asin,\n                name: product.name,\n              }]))));\n    }\n  }, [keyword]);\n\n  return (\n    <div className=\"Gallery\">\n      {galleries?.filter((product) => product.images.length > 0).map((product) => (\n        <Accordion key={product.asin}>\n          <AccordionSummary>\n            <Typography>{`${product.name} (${product.asin})`}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <GridList cols={smol ? 1 : 3} cellHeight={500}>\n              {product.images.map((image) => (\n                <GridListTile>\n                  <a href={image.largeImage} rel=\"noreferrer noopener\" target=\"_blank\">\n                    <img src={image.mediumImage} alt=\"thumbnail\" className=\"MuiGridListTile-imgFullHeight\" />\n                  </a>\n                </GridListTile>\n              ))}\n            </GridList>\n          </AccordionDetails>\n        </Accordion>\n      ))}\n    </div>\n  );\n}\n\nexport default Gallery;\n","import axios from 'axios';\nimport { AmazonGalleryResponse, Product } from '../models/amazon-gallery-response';\n\nexport function getGallery(asin: string) {\n  const params = new URLSearchParams();\n  params.append('asin', asin);\n  params.append('noCache', Date.now().toString());\n  return axios.post<AmazonGalleryResponse>('https://late-wave-51ce.flex.workers.dev/corsproxy/?apiurl=https://amazon.com/gp/customer-reviews/aj/private/reviewsGallery/get-data-for-reviews-image-gallery-for-asin', params);\n}\n\nexport function searchProducts() {\n  return Promise.resolve(['B075D9G69J', 'B07V1CYRCS', 'B06XBT1R3S']);\n}\n\nexport function searchProductsBeta(keyword: string, limit = 0) {\n  return axios.get<string>(`https://late-wave-51ce.flex.workers.dev/corsproxy/?apiurl=https://amazon.com/s?k=${keyword}`).then((response) => {\n    const domParser = new DOMParser();\n    const amzDoc = domParser.parseFromString(response.data, 'text/html');\n    const products: Product[] = [];\n    const nodes = amzDoc.querySelectorAll('div.s-result-item');\n    for (let i = 0; i < nodes.length; i += 1) {\n      const node = nodes[i];\n      if (limit !== 0 && products.length === limit) {\n        break;\n      }\n      if (!node.classList.contains('AdHolder')) {\n        const asin = node.getAttribute('data-asin');\n        const name = node.querySelector('span.a-text-normal')?.textContent;\n        if (asin != null && asin !== '') {\n          products.push({ asin: asin || '', name: name || '', images: [] });\n        }\n      }\n    }\n    return products;\n  });\n}\n","import React, { useState } from 'react';\nimport {\n  AppBar, unstable_createMuiStrictModeTheme, CssBaseline,\n  ThemeProvider, Toolbar, Typography, TextField,\n} from '@material-ui/core';\nimport Gallery from './Gallery';\n\nfunction App() {\n  const darkTheme = unstable_createMuiStrictModeTheme({\n    palette: {\n      type: 'dark',\n    },\n  });\n\n  const [keyword, setKeyword] = useState<string>('');\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">\n              Amazon Review Gallery\n            </Typography>\n            <TextField\n              style={{ marginLeft: darkTheme.spacing(2) }}\n              placeholder=\"Search...\"\n              onKeyDown={(e) => {\n                const target = e.target as HTMLInputElement;\n                if (e.key === 'Enter') {\n                  setKeyword(target.value);\n                  target.blur();\n                }\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Gallery keyword={keyword} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}